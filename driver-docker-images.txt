
SUGGESTION:
Driver docker images (source) files are kept in testkit repository instead of
neo4j-build-service-docker-images repository.
Docker images are NOT pushed to Amazon but are built on TeamCity agent or host when needed.


REASONING:
The driver folder in testkit contains python scripts that are driver specific and executes within
the driver Docker container.
These scripts handles the actual building of driver, runs unittests and starts the test backend for
integration tests.
Since these scripts are tightly coupled to the workings of the driver Docker container it makes
sense to also keep the actual Docker image source here. Keeping the Docker image source here would
also simplify for external contributors that wants to run our test suites.


IMPLEMENTATION:
Suggested testkit repository driver tree:
    /driver
        /dotnet
            backend.py          Starts test backend
            build.py            Builds driver
            unittests.py        Invokes unittests
            Dockerfile          Docker image source
            Dockertag           Docker image tag, MUST be updated along with Dockerfile
        /go
            ...
        /java
            ...
        /javascript
            ...
        /python
            ...


Docker images on TeamCity agent would look like this ($ docker image ls)
    Repository          Tag
    drivers-go-4.2      1
    drivers-go-4.0-dev  1
    drivers-java-4.2    2
Name of docker repository is constructed from: drivers-<driver>-<testkit branch> and the tag is
retrieved from /driver/<driver>/Dockertag file.
Pseudo code for part of build script that ensures that builds driver docker image:
    Construct repository name from <driver> and <testkit branch> into <repository>
    Read contents of Dockertag file into <tag>
    Run 'docker image ls <repository>:<tag>'
    If the images wasn't found:
        Remove all existing images that matches the name of the repository
        Build the image
As a result of this we will build the image once per TeamCity agent we happen to run on whenever
the image changes (not too often) as compared to today where we only pull on the agents (but we
need to manually build and push).
When running on developer machine branch can be ignored and set to 'local' or whatever. In local
mode the build script can be a bit smarter as well and check timestamps if we want to..
