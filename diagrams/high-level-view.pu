@startuml
participant "TeamCity\nResponsible for repo cloning and triggering" as TeamCity
participant "Agent\nTeamCity agent or other host\nRequires: Python >= 3.6 + Docker >= 19.03\nRepositories: testkit + driver + stub server" as Agent
participant "Driver\nDocker container\nImage contains: Python >= 3.6 + driver SDK\nMounts: repositories on Agent" as Driver
participant "Neo4j\nDocker container\nDifferent versions\nSingle instance or cluster\nCommunity or enterprise" as Neo4j
hide footbox

TeamCity -> Agent: Clone repositories on agent
note right of TeamCity
All repositories should follow the same branches.

Driver branch: 4.1 -> Test kit branch: 4.1
end note

TeamCity -> Agent: Invoke main entry point in test kit repository in build step
note right of TeamCity
Environment variables needs to be set before invoking script to
specify location of the cloned repositories and name of driver
docker image.

When running on local host these environment variables needs
to be set to locally cloned repositores and a locally pulled
docker image.
end note

note right of Agent
Everything below is orchestrated by main entry point in test kit repository
end note

Agent -> Driver: Start docker container
Agent -> Driver: Build driver & test backend

||50||
== Unit tests  == 
Agent -> Driver: Run unit tests

||50||
== Stub tests: protocol 4.0  == 
Agent -> Driver: Start test backend
loop for each test in suite
Agent -> Agent: Start stub server(s)
Agent -> Driver: { Test specific requests to test backend}
Driver -> Agent: { Test specific interaction with stub server}
end

||50||
== Stub tests: protocol 4.1  == 
note right of Agent
Same as above but with a different test suite
end note

||50||
== Integration tests: Server 4.0, single instance, enterprise  ==
Agent -> Driver: Start test backend
Agent -> Neo4j: Start docker container
loop for each test in suite
Agent -> Driver: { Test specific requests to test backend}
Driver -> Neo4j: { Test specific backend interaction}
end
alt stress tests
Agent -> Driver: Run stress tests
Driver -> Neo4j: { Stress test interaction }
end
Agent -> Neo4j: Stop docker container

||50||
== Integration tests: Server 4.1, cluser, enterprise  ==
note right of Agent
Same as above but with a different database version and
possibly a different test suite 
end note

||50||
== Connectivity tests  ==
loop for each test in suite
note right of Agent
Build different kinds of Docker networks like IpV6, modify CAs on driver image, Kerberos...
end note
Agent -> Driver: Start docker container
Agent -> Neo4j: Start docker container
Agent -> Driver: { Test specific requests to test backend}
Driver -> Neo4j: { Test specific backend interaction}
end note


||50||
@enduml
